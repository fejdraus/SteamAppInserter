const ja = {
  common: {
    ok: "OK",
    cancel: "キャンセル",
    removeAllDlc: "すべての DLC を削除",
    remove: "削除",
    errorWithMessage: "エラー: {message}",
  },
  buttons: {
    addToLibrary: "ライブラリに追加",
    editDlcLibrary: "DLC ライブラリを編集",
    removeFromLibrary: "ライブラリから削除",
    loading: "読み込み中...",
    adding: "追加中...",
    removing: "削除中...",
  },
  errors: {
    manifestMissing: "マニフェストが公開ミラーで見つかりません。手動アクセスをリクエストしてください。",
    failedAddSelectedDlc: "選択した DLC の追加に失敗しました。",
    failedInstallBaseGame: "ベースゲームのインストールに失敗しました。",
    failedFetchInfo: "ゲーム情報の取得に失敗しました。",
    failedRemoveGame: "ゲームの削除に失敗しました！",
  },
  alerts: {
    addingFailedTitle: "追加失敗",
    unableAddTitle: "ゲームを追加できません",
    unableGetDlcTitle: "DLC リストを取得できません",
    unableRemoveTitle: "削除できません",
    noDlcTitle: "利用可能な DLC なし",
  },
  messages: {
    changesApplied: "変更が適用されました。",
    gameAdded: "ゲームが正常に追加されました！",
    gameRemoved: "ゲームが正常に削除されました！",
    noDlcDetails: "このゲームにはインストールする DLC がありません。",
  },
  dialogs: {
    selectDlc: {
      title: "追加する DLC を選択",
      subtitle: "追加する DLC を選択してください。追加したくないものは選択を解除してください。",
      selectAll: "すべて選択",
      confirm: "選択を適用",
      alreadyAdded: "すでに追加済み",
    },
    baseInstall: {
      title: "ライブラリに追加",
      message: "このゲームには DLC がありません。ライブラリに追加しますか？",
      confirm: "ゲームを追加",
    },
    restart: {
      title: "Steam を再起動",
      message: "{details} Steam は再起動が必要です。今すぐ再起動しますか？",
      confirm: "今すぐ再起動",
      cancel: "後で",
    },
    remove: {
      title: "ライブラリから削除",
      message: "このゲームをライブラリから削除してもよろしいですか？",
    },
  },
  labels: {
    dlcWithId: "DLC {id}",
  },
  status: {
    preparing: "ファイルを準備中...",
    downloading: "マニフェストをダウンロード中...",
    merging: "DLC の選択をマージ中...",
    removing: "ライブラリから削除中...",
    success: "すべて完了！",
    failure: "操作に失敗しました。",
  },
  mirrors: {
    title: "ダウンロードソースを選択",
    default: "公開ミラー (ManifestHub)",
    maniluaUnderConstruction: "Manilua API (開発中)",
    maniluaDisabled: "",
  },
  auth: {
    title: "Manilua API キー",
    instructions: "Manilua API キーを入力してください。Manilua ダッシュボードから取得できます。",
    placeholder: "manilua_xxxxxxxxxxxxxxxxx",
    example: "例: manilua_abc123...",
    save: "保存",
    saving: "保存中...",
    required: "API キーが必要です。",
    invalid: "API キーが無効です。もう一度お試しください。",
    validationFailed: "API キーの検証に失敗しました。キーを確認してもう一度お試しください。",
    error: "検証エラー",
  },
  backend: {
    manifestAlreadyExists: "マニフェストは既に存在します",
    manifestNotAvailablePublic: "{name} ({appid}) のマニフェストは公開ミラーで利用できません。",
    manifestNotAvailablePublicNoName: "{appid} のマニフェストは公開ミラーで利用できません。",
    manifestSavedNoJson: "{target} にマニフェストを保存 (JSON 処理なし)",
    manifestSaved: "{target} にマニフェストを保存",
    couldNotDetermineAppid: "AppID を決定できませんでした。",
    manifestNotAvailableManilua: "{name} ({appid}) のマニフェストは Manilua ミラー経由で利用できません。API キーを確認してください。",
    manifestNotAvailableManiluaNoName: "{appid} のマニフェストは Manilua ミラー経由で利用できません。API キーを確認してください。",
    manifestNotFoundManilua: "{name} ({appid}) のマニフェストが Manilua ミラーで見つかりません。",
    manifestNotFoundManiluaNoName: "{appid} のマニフェストが Manilua ミラーで見つかりません。",
    apiKeyRejectedManilua: "API キーが Manilua ミラーによって拒否されました。API キーを確認してください。",
    manifestNotFoundOnMirror: "{name} ({appid}) のマニフェストが {source} ミラーで見つかりません。",
    couldNotDetermineAppidFromMessage: "メッセージから AppID を決定できませんでした。",
    maniluaRequiresApiKey: "Manilua ミラーには有効な API キーが必要です。",
    dlcAdded: "{count} 個の DLC を {target} に追加しました。",
    apiKeyNotConfigured: "API キーが設定されていません。",
    apiKeyRequired: "API キーが必要です。",
    apiKeyMustStartWith: "API キーは {prefix} で始まる必要があります。",
    apiKeyValidationFailed: "API キーの検証に失敗しました。",
    apiKeySaved: "API キーが保存されました。",
    unexpectedValidationResponse: "API キーの検証中に予期しない応答が発生しました。",
    apiKeyInvalid: "API キーが無効です。",
    apiKeyRejected: "API キーが Manilua サービスによって拒否されました。",
    validationRequestFailed: "検証リクエストが HTTP {status} で失敗しました。",
    validationException: "API キーの検証に失敗しました: {error}",
  },
};

export default ja;
