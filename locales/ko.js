const ko = {
  common: {
    ok: "OK",
    cancel: "취소",
    removeAllDlc: "모든 DLC 제거",
    remove: "제거",
    errorWithMessage: "오류: {message}",
  },
  buttons: {
    addToLibrary: "라이브러리에 추가",
    editDlcLibrary: "DLC 라이브러리 편집",
    removeFromLibrary: "라이브러리에서 제거",
    loading: "로딩 중...",
    adding: "추가 중...",
    removing: "제거 중...",
  },
  errors: {
    manifestMissing: "공개 미러에서 매니페스트를 찾을 수 없습니다. 수동 액세스를 요청하세요.",
    failedAddSelectedDlc: "선택한 DLC 추가 실패.",
    failedInstallBaseGame: "기본 게임 설치 실패.",
    failedFetchInfo: "게임 정보 가져오기 실패.",
    failedRemoveGame: "게임 제거 실패!",
  },
  alerts: {
    addingFailedTitle: "추가 실패",
    unableAddTitle: "게임을 추가할 수 없음",
    unableGetDlcTitle: "DLC 목록을 가져올 수 없음",
    unableRemoveTitle: "제거할 수 없음",
    noDlcTitle: "사용 가능한 DLC 없음",
  },
  messages: {
    changesApplied: "변경사항이 적용되었습니다.",
    gameAdded: "게임이 성공적으로 추가되었습니다!",
    gameRemoved: "게임이 성공적으로 제거되었습니다!",
    noDlcDetails: "이 게임에는 설치할 DLC가 없습니다.",
  },
  dialogs: {
    selectDlc: {
      title: "추가할 DLC 선택",
      subtitle: "추가할 DLC를 선택하세요. 추가하지 않을 항목은 선택 해제하세요.",
      selectAll: "모두 선택",
      confirm: "선택 적용",
      alreadyAdded: "이미 추가됨",
    },
    baseInstall: {
      title: "라이브러리에 추가",
      message: "이 게임에는 DLC가 없습니다. 라이브러리에 추가하시겠습니까?",
      confirm: "게임 추가",
    },
    restart: {
      title: "Steam 재시작",
      message: "{details} Steam을 재시작해야 합니다. 지금 재시작하시겠습니까?",
      confirm: "지금 재시작",
      cancel: "나중에",
    },
    remove: {
      title: "라이브러리에서 제거",
      message: "이 게임을 라이브러리에서 제거하시겠습니까?",
    },
  },
  labels: {
    dlcWithId: "DLC {id}",
  },
  status: {
    preparing: "파일 준비 중...",
    downloading: "매니페스트 다운로드 중...",
    merging: "DLC 선택 병합 중...",
    removing: "라이브러리에서 제거 중...",
    success: "모든 작업 완료!",
    failure: "작업 실패.",
  },
  mirrors: {
    title: "다운로드 소스 선택",
    default: "공개 미러 (ManifestHub)",
    maniluaUnderConstruction: "Manilua API (개발 중)",
    maniluaDisabled: "",
  },
  auth: {
    title: "Manilua API 키",
    instructions: "Manilua API 키를 입력하세요. Manilua 대시보드에서 구할 수 있습니다.",
    placeholder: "manilua_xxxxxxxxxxxxxxxxx",
    example: "예시: manilua_abc123...",
    save: "저장",
    saving: "저장 중...",
    required: "API 키가 필요합니다.",
    invalid: "API 키가 유효하지 않습니다. 다시 시도하세요.",
    validationFailed: "API 키 검증 실패. 키를 확인하고 다시 시도하세요.",
    error: "검증 오류",
  },
  backend: {
    manifestAlreadyExists: "매니페스트가 이미 존재합니다",
    manifestNotAvailablePublic: "{name} ({appid})의 매니페스트가 공개 미러에서 사용할 수 없습니다.",
    manifestNotAvailablePublicNoName: "{appid}의 매니페스트가 공개 미러에서 사용할 수 없습니다.",
    manifestSavedNoJson: "매니페스트를 {target}에 저장 (JSON 처리 없음)",
    manifestSaved: "매니페스트를 {target}에 저장",
    couldNotDetermineAppid: "AppID를 결정할 수 없습니다.",
    manifestNotAvailableManilua: "{name} ({appid})의 매니페스트가 Manilua 미러를 통해 사용할 수 없습니다. API 키를 확인하세요.",
    manifestNotAvailableManiluaNoName: "{appid}의 매니페스트가 Manilua 미러를 통해 사용할 수 없습니다. API 키를 확인하세요.",
    manifestNotFoundManilua: "{name} ({appid})의 매니페스트가 Manilua 미러에서 찾을 수 없습니다.",
    manifestNotFoundManiluaNoName: "{appid}의 매니페스트가 Manilua 미러에서 찾을 수 없습니다.",
    apiKeyRejectedManilua: "API 키가 Manilua 미러에 의해 거부되었습니다. API 키를 확인하세요.",
    manifestNotFoundOnMirror: "{name} ({appid})의 매니페스트가 {source} 미러에서 찾을 수 없습니다.",
    couldNotDetermineAppidFromMessage: "메시지에서 AppID를 결정할 수 없습니다.",
    maniluaRequiresApiKey: "Manilua 미러는 유효한 API 키가 필요합니다.",
    dlcAdded: "{count} DLC를 {target}에 추가했습니다.",
    apiKeyNotConfigured: "API 키가 구성되지 않았습니다.",
    apiKeyRequired: "API 키가 필요합니다.",
    apiKeyMustStartWith: "API 키는 {prefix}로 시작해야 합니다.",
    apiKeyValidationFailed: "API 키 검증 실패.",
    apiKeySaved: "API 키가 저장되었습니다.",
    unexpectedValidationResponse: "API 키 검증 중 예기치 않은 응답.",
    apiKeyInvalid: "API 키가 유효하지 않습니다.",
    apiKeyRejected: "API 키가 Manilua 서비스에 의해 거부되었습니다.",
    validationRequestFailed: "검증 요청이 HTTP {status}로 실패했습니다.",
    validationException: "API 키 검증 실패: {error}",
  },
};

export default ko;
